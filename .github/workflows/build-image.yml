name: Docker Image actions

on:
  workflow_dispatch: # MANUAL TRIGGER FROM GITHUB UI

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image variables
        run: |
          echo "REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "REPOSITORY=my-app-ecr" >> $GITHUB_ENV 
          echo "IMAGE_TAG=${{github.sha }}" >> $GITHUB_ENV

      - name: "Build Docker Image"
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest

      - name: "Install Trivy"
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
      
      - name: "Scan Docker Image with Trivy"
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL $REGISTRY/$REPOSITORY:latest

      - name: "Push Docker Image to Amazon ECR"
        run: docker push $REGISTRY/$REPOSITORY:latest
      
      - name: Force ECS Service Redeployment
        env:
          CLUSTER: ECS-Clusters
          SERVICE: mongo
        run: |
          aws ecs update-service \
            --cluster $CLUSTER \
            --service $SERVICE \
            --force-new-deployment
